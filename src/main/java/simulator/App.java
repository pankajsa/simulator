/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package simulator;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;

import com.solacesystems.jcsmp.JCSMPException;

import org.apache.avro.file.DataFileReader;
import org.apache.avro.file.DataFileWriter;
import org.apache.avro.io.BinaryDecoder;
import org.apache.avro.io.BinaryEncoder;
import org.apache.avro.io.DatumReader;
import org.apache.avro.io.DatumWriter;
import org.apache.avro.io.DecoderFactory;
import org.apache.avro.io.EncoderFactory;
import org.apache.avro.specific.SpecificDatumReader;
import org.apache.avro.specific.SpecificDatumWriter;

import payment.Employee;
import payment.Debit;

public class App {
    public String getGreeting() throws Exception{
        Employee emp = new Employee();

        emp.setLastName("Arora");
        emp.setFirstName("Pankaj");
        emp.setAge(50);
        emp.setPhoneNumber("81112222");

        final DatumWriter<Employee> datumWriter = new SpecificDatumWriter<>(Employee.class);
        // final DataFileWriter<Employee> dataFileWriter = new DataFileWriter<>(datumWriter);

        ByteArrayOutputStream baos = new ByteArrayOutputStream();

            // dataFileWriter.create(emp.getSchema(),
            //         new File("employees.avro"));

            for (int i=0;i< 1;i++){
                emp.setAge(i);
                System.out.println(emp.toString());

                baos.reset();
                BinaryEncoder encoder = EncoderFactory.get().binaryEncoder(baos, null);
                datumWriter.write(emp, encoder);
                encoder.flush();
                baos.flush();
                
                byte[] mybytes = baos.toByteArray();
                System.out.println(mybytes);


                FileOutputStream fos = null;
                try {
                    fos = new FileOutputStream(new File("myFile")); 
                    // Put data in your baos
                    baos.writeTo(fos);
                } catch(IOException ioe) {
                    // Handle exception here
                    ioe.printStackTrace();
                } finally {
                    fos.close();
                }

                // dataFileWriter.append(emp);
            }

        
        // finally {
        //     dataFileWriter.close();
        // }


        System.out.println("==================");
        File file = new File("myFile");
        byte[] fileContent = Files.readAllBytes(file.toPath());
        System.out.println(fileContent);

        BinaryDecoder decoder = DecoderFactory.get().binaryDecoder(fileContent, null);
        DatumReader<Employee> empReader = new SpecificDatumReader<>(Employee.class);
        Object obj = empReader.read(null, decoder);
        System.out.println(obj);

        // List<Employee> employeeList = new ArrayList<>();
        // DatumReader<Employee> empReader = new SpecificDatumReader<>(Employee.class);
        // DataFileReader<Employee> dataFileReader = new DataFileReader<>(file, empReader);

        // while (dataFileReader.hasNext()) {
        //     Employee e = dataFileReader.next(new Employee());
        //     System.out.println(e.toString());
        // }



        return "Hello world.";




    }

    public static void main(String[] args) throws Exception {
        Properties props = getProperties();
        // System.out.println(new App().getGreeting());
        // Publisher p = new Publisher();
        // p.sendMessage();
        
        Debit debit = new Debit();
        debit.setFirstName(args[0]);
        debit.setLastName(args[1]);
        debit.setAmount(Double.parseDouble(args[2]));
        debit.setCardNumber("3212");
        debit.setCardType("VISA");
        debit.setCustNumber("456123");
        debit.setMobile("81112222");

        System.out.println("========");
        System.out.println(debit);
        System.out.println("========");

        AvroHelper helper = new AvroHelper();
        byte[] b = helper.serialize(debit);
        Publisher p = new Publisher();
        p.sendMessage(b);



        Debit d = helper.deserialize(b);
        System.out.println("====+++++====");
        System.out.println(d);
        System.out.println("====+++++====");

    }


    public static Properties getProperties(){
        try (InputStream input = App.class.getClassLoader().getResourceAsStream("application.properties")) {
            Properties props = new Properties();
    
            if (input == null) {
                System.out.println("Sorry, unable to find config.properties");
                return null;
            }

            //load a properties file from class path, inside static method
            props.load(input);
    
            //get the property value and print it out
            System.out.println(props.getProperty("broker.username"));
            return props;
    
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        return null;
    }
}

